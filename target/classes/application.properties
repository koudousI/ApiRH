#Global configuration
spring.application.name=ApiRH

#Tomcat configuration
#server.port=9000


#logging.level.org.springframework=error

#Log level configuration
#logging.level.error=ERROR
#logging.level.bj.springboot.ocproject=INFO
#logging.level.org.springframework.boot.autoconfigure.h2=INFO
#logging.level.org.springframework.boot.web.embedded.tomcat=INFO

#----------------mysql Configuration-----------------------------

# DataSource settings: set here your own configurations for the database port par defaut de mysql: 3306
# connection. In this example we have "netgloo_blog" as database name and 
# "root" as username and password.
spring.datasource.url = jdbc:mysql://127.0.0.1:8888/apidboc 
spring.datasource.username = root
spring.datasource.password = root

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect